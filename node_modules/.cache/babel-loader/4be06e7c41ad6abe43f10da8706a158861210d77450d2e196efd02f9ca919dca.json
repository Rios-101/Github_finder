{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charles\\\\Desktop\\\\Richard\\\\Code with Mosh\\\\github-finder\\\\src\\\\components\\\\context\\\\github\\\\githubContext.jsx\",\n  _s = $RefreshSig$();\n// import { createContext, useState } from \"react\";\nimport { createContext, useReducer } from \"react\";\nimport GithubReducer from \"./githubReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GithubContext = /*#__PURE__*/createContext({\n  userResults: [],\n  isLoading: true,\n  searchUsers: () => {},\n  clearUsers: () => {}\n});\nexport const GithubProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // const [userResults,setUserResults] = useState([])\n  // const [isLoading,setIsLoading] = useState(true)\n\n  const initial = {\n    userResults: [],\n    user: {},\n    repos: [],\n    isLoading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initial);\n\n  // Get First 30 users (for testing purpose)\n  // const data = async ()=>{\n  //     dispatch({type:\"SET_LOADING\"})\n  //     const info = await fetch(\"https://api.github.com/users\",{\n  //       headers: {\n  //         Authorization: \"token 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\"\n  //       }\n  //     })\n\n  //     const res = await info.json()\n\n  //     // setTimeout(()=>{\n  //     //     dispatch({\n  //     //         type:\"GET_USERS\",\n  //     //         payload:res\n  //     //     })\n  //     // },5000)\n  //     // setUserResults(res)\n  //     // setIsLoading(false)\n\n  //     dispatch({\n  //         type:\"GET_USERS\",\n  //         payload:res\n  //     })\n\n  //     dispatch({})\n  //   }\n  const searchUsers = async user => {\n    dispatch({\n      type: \"SET_LOADING\"\n    });\n    const info = await fetch(`https://api.github.com/search/users?q=${user}`, {\n      headers: {\n        Authorization: `token ${process.env.REACT_APP_GITHUB_AUTH_KEY}`\n      }\n    });\n    const {\n      items\n    } = await info.json();\n    dispatch({\n      type: \"GET_USERS\",\n      payload: items\n    });\n  };\n  const getSingleUser = async user => {\n    dispatch({\n      type: \"SET_LOADING\"\n    });\n    const info = await fetch(`https://api.github.com/users/${user}`, {\n      headers: {\n        Authorization: `token ${process.env.REACT_APP_GITHUB_AUTH_KEY}`\n      }\n    });\n    const data = await info.json();\n    dispatch({\n      type: \"GET_SINGLE_USER\",\n      payload: data\n    });\n  };\n  const getSingleUserRepos = async user => {\n    const info = await fetch(`https://api.github.com/users/${user}/repos`, {\n      headers: {\n        Authorization: `token ${process.env.REACT_APP_GITHUB_AUTH_KEY}`\n      }\n    });\n    const data = await info.json();\n    dispatch({\n      type: \"GET_REPOS\",\n      payload: data\n    });\n  };\n  const clearUsers = () => {\n    dispatch({\n      type: \"CLEAR\"\n    });\n  };\n  const value = {\n    userResults: state.userResults,\n    isLoading: state.isLoading,\n    user: state.user,\n    repos: state.repos,\n    searchUsers,\n    clearUsers,\n    getSingleUser,\n    getSingleUserRepos\n  };\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 12\n  }, this);\n};\n_s(GithubProvider, \"Dp96d79LVNX0OZdHZKIFMPoopFw=\");\n_c = GithubProvider;\nvar _c;\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"names":["createContext","useReducer","GithubReducer","GithubContext","userResults","isLoading","searchUsers","clearUsers","GithubProvider","children","initial","user","repos","state","dispatch","type","info","fetch","headers","Authorization","process","env","REACT_APP_GITHUB_AUTH_KEY","items","json","payload","getSingleUser","data","getSingleUserRepos","value"],"sources":["C:/Users/charles/Desktop/Richard/Code with Mosh/github-finder/src/components/context/github/githubContext.jsx"],"sourcesContent":["// import { createContext, useState } from \"react\";\r\nimport { createContext, useReducer } from \"react\";\r\nimport GithubReducer from \"./githubReducer\";\r\n\r\nexport const GithubContext = createContext({\r\n    userResults:[],\r\n    isLoading:true,\r\n    searchUsers:()=>{},\r\n    clearUsers:()=>{},\r\n})\r\n\r\nexport const GithubProvider =({children})=>{\r\n    // const [userResults,setUserResults] = useState([])\r\n    // const [isLoading,setIsLoading] = useState(true)\r\n\r\n    const initial = {\r\n        userResults: [],\r\n        user:{},\r\n        repos:[],\r\n        isLoading:false\r\n    }\r\n\r\n    const [state,dispatch] = useReducer(GithubReducer, initial)\r\n\r\n\r\n    // Get First 30 users (for testing purpose)\r\n    // const data = async ()=>{\r\n    //     dispatch({type:\"SET_LOADING\"})\r\n    //     const info = await fetch(\"https://api.github.com/users\",{\r\n    //       headers: {\r\n    //         Authorization: \"token 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\"\r\n    //       }\r\n    //     })\r\n    \r\n    //     const res = await info.json()\r\n    \r\n    //     // setTimeout(()=>{\r\n    //     //     dispatch({\r\n    //     //         type:\"GET_USERS\",\r\n    //     //         payload:res\r\n    //     //     })\r\n    //     // },5000)\r\n    //     // setUserResults(res)\r\n    //     // setIsLoading(false)\r\n\r\n    //     dispatch({\r\n    //         type:\"GET_USERS\",\r\n    //         payload:res\r\n    //     })\r\n\r\n    //     dispatch({})\r\n    //   }\r\n    const searchUsers = async (user)=>{\r\n        dispatch({type:\"SET_LOADING\"})\r\n        const info = await fetch(`https://api.github.com/search/users?q=${user}`,{\r\n          headers: {\r\n            Authorization: `token ${process.env.REACT_APP_GITHUB_AUTH_KEY}`\r\n          }\r\n        })\r\n    \r\n        const {items} = await info.json()\r\n\r\n\r\n        dispatch({\r\n            type:\"GET_USERS\",\r\n            payload:items\r\n        })\r\n\r\n      }\r\n\r\n      const getSingleUser = async (user)=>{\r\n        dispatch({type:\"SET_LOADING\"})\r\n        const info = await fetch(`https://api.github.com/users/${user}`,{\r\n          headers: {\r\n            Authorization: `token ${process.env.REACT_APP_GITHUB_AUTH_KEY}`\r\n          }\r\n        })\r\n    \r\n        const data = await info.json()\r\n\r\n\r\n        dispatch({\r\n            type:\"GET_SINGLE_USER\",\r\n            payload:data\r\n        })\r\n\r\n      }\r\n\r\n      const getSingleUserRepos = async (user)=>{\r\n        const info = await fetch(`https://api.github.com/users/${user}/repos`,{\r\n          headers: {\r\n            Authorization: `token ${process.env.REACT_APP_GITHUB_AUTH_KEY}`\r\n          }\r\n        })\r\n\r\n        const data = await info.json()\r\n\r\n        dispatch({\r\n          type:\"GET_REPOS\",\r\n          payload:data\r\n        })\r\n        \r\n      }\r\n\r\n      const clearUsers =()=>{\r\n        dispatch({type:\"CLEAR\"})\r\n      }\r\n\r\n    const value = {userResults: state.userResults,isLoading:state.isLoading,user:state.user,repos:state.repos,searchUsers,clearUsers,getSingleUser,getSingleUserRepos}\r\n    return <GithubContext.Provider value={value}>{children}</GithubContext.Provider>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}