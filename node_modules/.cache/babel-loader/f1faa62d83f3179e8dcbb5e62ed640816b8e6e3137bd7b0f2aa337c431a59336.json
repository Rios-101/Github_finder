{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charles\\\\Desktop\\\\Richard\\\\Code with Mosh\\\\github-finder\\\\src\\\\components\\\\users\\\\userResults.component.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport Spinner from \"../asset/spinner/spinner.component\";\nimport { GithubContext } from \"../context/github/githubContext\";\n// import Pagination from \"../Pagination/pagination.component\"\nimport UserItem from \"./userItem.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserResults = () => {\n  _s();\n  const {\n    userResults,\n    isLoading\n  } = useContext(GithubContext);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  // const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = userResults.slice(indexOfLastPost, inde);\n\n  // Paginate\n  // const paginate = (number)=>{\n  //     setCurrentPage(number)\n  // }\n  // page count\n  const pageCount = Math.ceil(userResults.length / postsPerPage);\n  // change page\n  const changePage = _ref => {\n    let {\n      selected\n    } = _ref;\n    setCurrentPage(selected);\n  };\n  // useEffect(()=>{data()},[])\n\n  if (!isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid my-6 gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\",\n        children: currentPosts.map(e => /*#__PURE__*/_jsxDEV(UserItem, {\n          event: e\n        }, e.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"Previous\",\n        nextLabel: \"Next\",\n        pageCount: pageCount,\n        onPageChange: changePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this);\n  }\n};\n_s(UserResults, \"Ps6TvJl7S8oYhqe25VYe/Ophfto=\");\n_c = UserResults;\nexport default UserResults;\nvar _c;\n$RefreshReg$(_c, \"UserResults\");","map":{"version":3,"names":["useContext","useState","ReactPaginate","Spinner","GithubContext","UserItem","UserResults","userResults","isLoading","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","currentPosts","slice","inde","pageCount","Math","ceil","length","changePage","selected","map","e","id"],"sources":["C:/Users/charles/Desktop/Richard/Code with Mosh/github-finder/src/components/users/userResults.component.jsx"],"sourcesContent":["import { useContext,useState } from \"react\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport Spinner from \"../asset/spinner/spinner.component\"\r\nimport { GithubContext } from \"../context/github/githubContext\"\r\n// import Pagination from \"../Pagination/pagination.component\"\r\nimport UserItem from \"./userItem.component\"\r\n\r\n\r\n\r\nconst UserResults = ()=>{\r\n\r\n  const {userResults,isLoading} = useContext(GithubContext)\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(10 );\r\n\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    // const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = userResults.slice(indexOfLastPost, inde);\r\n\r\n    // Paginate\r\n    // const paginate = (number)=>{\r\n    //     setCurrentPage(number)\r\n    // }\r\n    // page count\r\n    const pageCount = Math.ceil(userResults.length/postsPerPage)\r\n    // change page\r\n    const changePage = ({selected})=>{\r\n        setCurrentPage(selected)\r\n    }\r\n    // useEffect(()=>{data()},[])\r\n\r\n    if(!isLoading){\r\n        return (\r\n            <>\r\n                <div className=\"grid my-6 gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\r\n                {currentPosts.map(e=><UserItem key={e.id} event={e}/>)}\r\n                </div>\r\n                {/* <Pagination postsPerPage={postsPerPage} totalPosts={userResults.length} paginate={paginate}/> */}\r\n                <ReactPaginate\r\n                    previousLabel=\"Previous\"\r\n                    nextLabel=\"Next\"\r\n                    pageCount={pageCount}\r\n                    onPageChange={changePage}\r\n                     \r\n                />\r\n            </>\r\n        )\r\n    }else{\r\n        return (<Spinner/>)\r\n    }\r\n}\r\n\r\nexport default UserResults"],"mappings":";;AAAA,SAASA,UAAU,EAACC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,OAAO,MAAM,oCAAoC;AACxD,SAASC,aAAa,QAAQ,iCAAiC;AAC/D;AACA,OAAOC,QAAQ,MAAM,sBAAsB;AAAA;AAAA;AAI3C,MAAMC,WAAW,GAAG,MAAI;EAAA;EAEtB,MAAM;IAACC,WAAW;IAACC;EAAS,CAAC,GAAGR,UAAU,CAACI,aAAa,CAAC;EACzD,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACU,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAE;;EAGlC;EACA,MAAMW,eAAe,GAAGH,WAAW,GAAGE,YAAY;EAClD;EACA,MAAME,YAAY,GAAGN,WAAW,CAACO,KAAK,CAACF,eAAe,EAAEG,IAAI,CAAC;;EAE7D;EACA;EACA;EACA;EACA;EACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,IAAI,CAACX,WAAW,CAACY,MAAM,GAACR,YAAY,CAAC;EAC5D;EACA,MAAMS,UAAU,GAAG,QAAc;IAAA,IAAb;MAACC;IAAQ,CAAC;IAC1BX,cAAc,CAACW,QAAQ,CAAC;EAC5B,CAAC;EACD;;EAEA,IAAG,CAACb,SAAS,EAAC;IACV,oBACI;MAAA,wBACI;QAAK,SAAS,EAAC,0EAA0E;QAAA,UACxFK,YAAY,CAACS,GAAG,CAACC,CAAC,iBAAE,QAAC,QAAQ;UAAY,KAAK,EAAEA;QAAE,GAAfA,CAAC,CAACC,EAAE;UAAA;UAAA;UAAA;QAAA,QAAa;MAAC;QAAA;QAAA;QAAA;MAAA,QAChD,eAEN,QAAC,aAAa;QACV,aAAa,EAAC,UAAU;QACxB,SAAS,EAAC,MAAM;QAChB,SAAS,EAAER,SAAU;QACrB,YAAY,EAAEI;MAAW;QAAA;QAAA;QAAA;MAAA,QAE3B;IAAA,gBACH;EAEX,CAAC,MAAI;IACD,oBAAQ,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAE;EACtB;AACJ,CAAC;AAAA,GA3CKd,WAAW;AAAA,KAAXA,WAAW;AA6CjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}