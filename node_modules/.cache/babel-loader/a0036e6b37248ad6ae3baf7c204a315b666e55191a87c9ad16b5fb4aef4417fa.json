{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charles\\\\Desktop\\\\Richard\\\\Code with Mosh\\\\github-finder\\\\src\\\\components\\\\context\\\\alart\\\\alart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport { AlartReducer } from \"./alartReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AlartContext = /*#__PURE__*/createContext();\nexport const AlartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const initialState = null;\n  const [state, dispatch] = useReducer(AlartReducer, initialState);\n  const setAlart = (msg, type) => {\n    dispatch({\n      type: \"SET_ALART\",\n      payload: {\n        msg,\n        type\n      }\n    });\n    dispatch({\n      type: \"REMOVE_ALART,\"\n    });\n  };\n  const value = {\n    alart: state\n  };\n  return /*#__PURE__*/_jsxDEV(AlartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n};\n_s(AlartProvider, \"UrEkDPQH5U12xnblC9PjDJeyoVE=\");\n_c = AlartProvider;\nvar _c;\n$RefreshReg$(_c, \"AlartProvider\");","map":{"version":3,"names":["createContext","useReducer","AlartReducer","AlartContext","AlartProvider","children","initialState","state","dispatch","setAlart","msg","type","payload","value","alart"],"sources":["C:/Users/charles/Desktop/Richard/Code with Mosh/github-finder/src/components/context/alart/alart.context.jsx"],"sourcesContent":["import { createContext,useReducer } from \"react\";\r\nimport { AlartReducer } from \"./alartReducer\";\r\n\r\n\r\nexport const AlartContext = createContext();\r\n\r\n\r\nexport const AlartProvider = ({children})=>{\r\n\r\n    const initialState = null;\r\n\r\n    const [state,dispatch] = useReducer(AlartReducer,initialState)\r\n\r\n    const setAlart =(msg,type)=>{\r\n        dispatch({type:\"SET_ALART\",payload:{msg,type}})\r\n        dispatch({type:\"REMOVE_ALART,\"})\r\n    }\r\n\r\n    const value = {alart:state}\r\n    return <AlartContext.Provider value={value}>{children}</AlartContext.Provider>\r\n\r\n}\r\n\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAACC,UAAU,QAAQ,OAAO;AAChD,SAASC,YAAY,QAAQ,gBAAgB;AAAC;AAG9C,OAAO,MAAMC,YAAY,gBAAGH,aAAa,EAAE;AAG3C,OAAO,MAAMI,aAAa,GAAG,QAAc;EAAA;EAAA,IAAb;IAACC;EAAQ,CAAC;EAEpC,MAAMC,YAAY,GAAG,IAAI;EAEzB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGP,UAAU,CAACC,YAAY,EAACI,YAAY,CAAC;EAE9D,MAAMG,QAAQ,GAAE,CAACC,GAAG,EAACC,IAAI,KAAG;IACxBH,QAAQ,CAAC;MAACG,IAAI,EAAC,WAAW;MAACC,OAAO,EAAC;QAACF,GAAG;QAACC;MAAI;IAAC,CAAC,CAAC;IAC/CH,QAAQ,CAAC;MAACG,IAAI,EAAC;IAAe,CAAC,CAAC;EACpC,CAAC;EAED,MAAME,KAAK,GAAG;IAACC,KAAK,EAACP;EAAK,CAAC;EAC3B,oBAAO,QAAC,YAAY,CAAC,QAAQ;IAAC,KAAK,EAAEM,KAAM;IAAA,UAAER;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAyB;AAElF,CAAC;AAAA,GAdYD,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}